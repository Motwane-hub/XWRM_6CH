<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="tmrTestON.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>20, 8</value>
  </metadata>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>123, 7</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
</root>