<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
  <metadata name="tmrTestON.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>11, 7</value>
  </metadata>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>123, 7</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>35</value>
  </metadata>
</root>